{"version":3,"file":"rollup-jsy-bootstrap.mjs","sources":["../esm/index.js","../node_modules/picomatch/lib/constants.js","../node_modules/picomatch/lib/utils.js","../node_modules/picomatch/lib/scan.js","../node_modules/picomatch/lib/parse.js","../node_modules/picomatch/lib/picomatch.js","../node_modules/picomatch/index.js","../node_modules/@rollup/pluginutils/dist/es/index.js","../code/rollup.jsy"],"sourcesContent":["const rx_escape_offside_ops =  /[?|+*@:.\\/\\\\\\(\\)\\{\\}\\[\\]\\=\\>]/g ;\nconst re_space_prefix =  /(?:^|[ \\t]+)/.source ; // spaces or start of line\nconst re_space_suffix =  /(?=$|[ \\t]+)/.source ; // spaces or end of line\n\nfunction regexp_from_jsy_op(jsy_op, with_spacing) {\n  if ('string' === typeof jsy_op) {\n    // escape Offside operator chars to RegExp\n    jsy_op = jsy_op.replace(rx_escape_offside_ops, '\\\\$&');\n    // surrounded by newlines or spacees\n    if (with_spacing) {\n      jsy_op = re_space_prefix + jsy_op + re_space_suffix;}\n    return `(?:${jsy_op})` }// using a non-matching group\n\n  if (jsy_op instanceof RegExp) {\n    return jsy_op.source} }\n\n\nfunction sourcemap_comment(srcmap_json, newline='\\n') {\n  if ('string' !== typeof srcmap_json) {\n    srcmap_json = JSON.stringify(srcmap_json);}\n\n  let b64 = 'undefined' !== typeof Buffer\n    ? Buffer.from(srcmap_json).toString('base64')\n    : globalThis.btoa(unescape(encodeURIComponent(srcmap_json) ));\n\n  // break up the source mapping url trigger string to prevent false positives on the following line\n  return `${newline}//# ${'sourceMapping'}URL=data:application/json;charset=utf-8;base64,${b64}${newline}`}\n\n// @::   @::>   @::>*   @::*\nconst lambda_block_tbl = {\n  '': a =>({pre: `((${a}) => {`, post: '})'})\n, '>': a =>({pre: `(async (${a}) => {`, post: '})'})\n, '>*': a =>({pre: `((async function * (${a}) {`, post: '}).bind(this))'})\n, '*': a =>({pre: `((function * (${a}) {`, post: '}).bind(this))'}) };\n\n// @=>   @=>>\nconst lambda_arrow_tbl = {\n  __proto__: lambda_block_tbl\n, '': a =>({pre: `((${a}) =>`, post: ')'})\n, '>': a =>({pre: `(async (${a}) =>`, post: ')'}) };\n\n\n// @!::   @!::>   @!::>*   @!::*\nconst iife_expr_tbl = {\n  '': a =>({pre: `(((${a}) => {`, post: '})())'})\n, '>': a =>({pre: `((async (${a}) => {`, post: '})())'})\n, '>*': a =>({pre: `((async function * (${a}) {`, post: '}).call(this))'})\n, '*': a =>({pre: `((function * (${a}) {`, post: '}).call(this))'}) };\n\n\n// @!=>   @!=>>\nconst iife_arrow_tbl = {\n  __proto__: iife_expr_tbl\n, '': a =>({pre: `(((${a}) =>`, post: ')())'})\n, '>': a =>({pre: `((async (${a}) =>`, post: ')())'}) };\n\n\nconst bindLambdaOpResolve = (table, withArgs) =>\n  function opResolve(p) {\n    let [_, m1, m2] = p.content.match(this.jsy_op);\n    let args = withArgs ? m1 || '' : '';\n    let suffix = (withArgs ? m2 : m1) || '';\n\n    let entry = table[suffix];\n    if (undefined === entry) {\n      throw new SyntaxError(`JSY lambda expression unrecognized specifier (\"${suffix}\")`) }\n\n    return entry(args)};\n\n\n\nconst at_lambda_offside = [\n  {jsy_op0: '@=>', jsy_op: /@=>(>?\\*?)/,\n      pre: '(()=>', post: ')',\n      opResolve: bindLambdaOpResolve(lambda_arrow_tbl) }\n\n, {jsy_op0: '@\\\\=>', jsy_op: /@\\\\(.*?)=>(>?\\*?)/,\n      pre: '(()=>', post: ')'\n    , opResolve: bindLambdaOpResolve(lambda_arrow_tbl, true) }\n\n, {jsy_op0: '@::', jsy_op: /@::(>?\\*?)/,\n      pre: '(()=>{', post: '})',\n      opResolve: bindLambdaOpResolve(lambda_block_tbl) }\n\n, {jsy_op0: '@\\\\::', jsy_op: /@\\\\(.*?)::(>?\\*?)/,\n      pre: '(()=>{', post: '})',\n      opResolve: bindLambdaOpResolve(lambda_block_tbl, true) } ];\n\n\nconst at_lambda_iife_offside = [\n  {jsy_op: '::!', pre: '{(()=>{', post: '})()}', is_kw_close: true}\n, {jsy_op: '::!>', pre: '{(async ()=>{', post: '})()}', is_kw_close: true}\n\n, {jsy_op0: '@!*>', jsy_op: /@!\\*>/, pre: '((async function *(){', post: '}).call(this))'}\n, {jsy_op0: '@!*[]', jsy_op: /@!\\*\\[\\]/, pre: '[... (function *(){', post: '}).call(this)]'}\n, {jsy_op0: '@!*#', jsy_op: /@!\\*#/, pre: '([... (function *(){', post: '}).call(this)])'}\n, {jsy_op0: '@!*', jsy_op: /@!\\*/, pre: '((function *(){', post: '}).call(this))'}\n\n\n, {jsy_op0: '@!\\\\::', jsy_op: /@!\\\\(.*?)::(>?\\*?)/,\n      pre: '((()=>', post: ')())',\n      opResolve: bindLambdaOpResolve(iife_expr_tbl, true) }\n\n, {jsy_op0: '@!\\\\=>', jsy_op: /@!\\\\(.*?)=>(>?\\*?)/,\n      pre: '((()=>', post: ')())',\n      opResolve: bindLambdaOpResolve(iife_arrow_tbl, true) }\n\n, {jsy_op0: '@!=>', jsy_op: /@!=>(>?\\*?)/,\n      pre: '((()=>', post: ')())',\n      opResolve: bindLambdaOpResolve(iife_arrow_tbl) }\n\n, {jsy_op0: '@!', jsy_op: /@!(>?\\*?)(?!=>)/,\n      pre: '((()=>{', post: '})())',\n      opResolve: bindLambdaOpResolve(iife_expr_tbl) } ];\n\n// Like lambdas without closing over `this`\n// @~::   @~::>   @~::>*   @~::*\nconst func_block_tbl = {\n  '': a =>({pre: `(function (${a}) {`, post: '})'})\n, '>': a =>({pre: `(async function(${a}) {`, post: '})'})\n, '>*': a =>({pre: `(async function * (${a}) {`, post: '})'})\n, '*': a =>({pre: `(function * (${a}) {`, post: '})'}) };\n\n\nconst bindFuncOpResolve = (table, withArgs) =>\n  function opResolve(p) {\n    let [_, m1, m2] = p.content.match(this.jsy_op);\n    let args = withArgs ? m1 || '' : '';\n    let suffix = (withArgs ? m2 : m1) || '';\n\n    let entry = table[suffix];\n    if (undefined === entry) {\n      throw new SyntaxError(`JSY function expression unrecognized specifier (\"${suffix}\")`) }\n\n    return entry(args)};\n\n\nconst at_func_offside = [\n  {jsy_op0: '@~::', jsy_op: /@~(.*?)::(>?\\*?)/,\n      pre: '(function () {', post: '})',\n      opResolve: bindFuncOpResolve(func_block_tbl, true) } ];\n\nconst op_prefix_nullish = {\n  prefix: '?', rx_prefix: /\\?(\\.?)/\n, opPrefixResolve(p, at_op) {\n    let at_res = at_op.opResolve ? at_op.opResolve(p) : at_op;\n    let pre = '?.' + (at_res.pre || '');\n    return {... at_res, pre} } };\n\n\nfunction at_op_for_prefix(jsy_prefix_op, at_op) {\n  let {jsy_op0, jsy_op} = at_op;\n  if (! /^[@?]/.test(jsy_op0 || jsy_op) ) {\n    return}\n\n  if (undefined === jsy_op0) {\n    jsy_op0 = jsy_op;\n    jsy_op = new RegExp(regexp_from_jsy_op(jsy_op, false)); }\n\n  else if ('string' === typeof jsy_op) {\n    jsy_op = new RegExp(regexp_from_jsy_op(jsy_op, false)); }\n\n  else if ('function' !== typeof jsy_op.exec) {\n    throw new Error('Unexpected jsy_op type') }\n\n  jsy_op0 = jsy_prefix_op.prefix + jsy_op0;\n  jsy_op = new RegExp(`${jsy_prefix_op.rx_prefix.source}${jsy_op.source}`, jsy_op.flags);\n\n  return {...at_op,\n    jsy_op0, jsy_op, foldTop: true\n  , opResolve: p => jsy_prefix_op.opPrefixResolve(p, at_op) } }\n\n\nfunction apply_prefix_op({jsy_prefix_op, op_collections}) {\n  let res = [];\n  for (let at_op_list of op_collections) {\n    for (let at_op of at_op_list) {\n      let ea = at_op_for_prefix(\n        jsy_prefix_op, at_op);\n      if (undefined !== ea) {\n        res.push(ea); } } }\n  return res}\n\n// Order matters here -- list more specific matchers higher (first) in the order\nconst at_outer_offside = [\n  {jsy_op: '::()', pre: '(', post: ')', nestBreak: true}\n, {jsy_op: '::{}', pre: '{', post: '}', nestBreak: true}\n, {jsy_op: '::[]', pre: '[', post: ']', nestBreak: true}\n, {jsy_op: '::', pre: ' {', post: '}', nestBreak: true, is_kw_close: true} ];\n\nconst at_inner_offside_basic = [\n  {jsy_op: '@:', pre: '({', post: '})', implicitCommas: true, isFoldable: true}\n, {jsy_op: '@#', pre: '([', post: '])', implicitCommas: true, isFoldable: true}\n, {jsy_op: '@()', pre: '(', post: ')', implicitCommas: true, isFoldable: true}\n, {jsy_op: '@{}', pre: '{', post: '}', implicitCommas: true, isFoldable: true}\n, {jsy_op: '@[]', pre: '[', post: ']', implicitCommas: true, isFoldable: true}\n, {jsy_op: '@', pre: '(', post: ')', implicitCommas: true, isFoldable: true} ];\n\n\n\nconst at_experimental = [\n  /* experimental ideas; may be removed at any time */];\n\n\nconst at_unknown_ops = [\n  {jsy_op0: '?@', jsy_op: /\\?@[^\\w\\s]+/,}\n, {jsy_op0: '::', jsy_op: /::[^\\w\\s]+/,}\n, {jsy_op0: '@', jsy_op: /@[^\\w\\s]+/,} ];\n\n\nconst at_inner_prefix_nullish = /* #__PURE__ */ apply_prefix_op({\n  jsy_prefix_op: op_prefix_nullish\n, op_collections:[\n    at_func_offside\n  , at_lambda_offside\n  , at_lambda_iife_offside\n  , at_inner_offside_basic] });\n\nconst at_inner_offside = /* #__PURE__ */ [].concat(\n  at_func_offside\n, at_lambda_offside\n, at_lambda_iife_offside\n, at_inner_offside_basic\n\n, at_inner_prefix_nullish);\n\n\nconst at_offside = /* #__PURE__ */ [].concat(\n  at_outer_offside\n, at_inner_offside\n, at_experimental);\n\n\nconst at_offside_map = /* #__PURE__ */ at_offside.reduce(\n  (m, ea) => {\n    if (ea.jsy_op0) {\n      m[ea.jsy_op0] = ea;}\n\n    if ('string' === typeof ea.jsy_op) {\n      m[ea.jsy_op] = ea;}\n    return m}\n, {});\n\n\nfunction kwExpandOp(p) {\n  return {__proto__: this, pre: p.kw + this.pre} }\n\nconst extra_jsy_ops = {\n  kw_normal:{jsy_op: 'kw', pre: ' (', post: ')', kwExpandOp, in_nested_block: true}\n, kw_explicit:{jsy_op: 'kw', pre: '', post: '', kwExpandOp, in_nested_block: true}\n, tmpl_param:{jsy_op: 'tmpl_param', pre: '', post: '', in_nested_block: true}\n, jsx_param:{jsy_op: 'jsx_param', pre: '', post: '', in_nested_block: true} };\n\nconst keywords_with_args = ['if', 'while', 'for await', 'for', 'switch'];\nconst keywords_zero_args = ['catch'];\n\nconst keywords_locator_parts = /* #__PURE__ */ [].concat(\n  keywords_with_args.map(e => `else ${e}`)\n, keywords_with_args\n, keywords_zero_args);\n\nconst regexp_keyword = sz => {\n  sz = sz.replace(/[ ]+/g, '[ ]+'); // allow one or more spaces\n  return `(?:${sz})` };// using a non-matching group\n\nconst re_keyword_space_prefix =  /^(?:[ \\t]*)/.source ; // start of line and indent\nconst re_keyword_trailer =  /(?:[ \\t]*(?=[^\\w,:;=]|$))/.source ;\n\nconst rx_keyword_ops = /* #__PURE__ */ new RegExp(\n  re_keyword_space_prefix\n    + `(?:${keywords_locator_parts.map(regexp_keyword).join('|')})`\n    + re_keyword_trailer\n  , 'g' );// global regexp for lastIndex support\n\nconst regexp_from_offside_op = offside_op =>\n  regexp_from_jsy_op(offside_op.jsy_op, true);\n\nconst rx_offside_ops = /* #__PURE__ */ new RegExp(\n  at_offside\n    .map(regexp_from_offside_op)\n    .filter(Boolean)\n    .join('|')\n, 'g' );// global regexp\n\nconst rx_unknown_ops = /* #__PURE__ */ new RegExp(\n  at_unknown_ops\n    .map(regexp_from_offside_op)\n    .filter(Boolean)\n    .join('|')\n, 'g' );// global regexp\n\nfunction inject_dedent(offside_lines, trailing_types) {\n  if ('function' !== typeof trailing_types) {\n    const s_trailing_types = new Set(\n      trailing_types || ['comment_eol']);\n    trailing_types = k => s_trailing_types.has(k);}\n\n  for (const ln of offside_lines) {\n    if (ln.is_blank) {continue}\n\n    const {len_dedent, len_indent, len_inner} = ln;\n\n    const offside_dedent ={\n      type: 'offside_dedent'\n    , len_dedent, len_indent};\n\n    if (len_inner) {\n      offside_dedent.len_inner = len_inner;}\n\n    const last = ln.content.pop();\n    if (last.multiline || trailing_types(last.type)) {\n      ln.content.push(offside_dedent, last); }\n    else {\n      ln.content.push(last, offside_dedent); } } }\n\nconst SourceLocation ={\n  __proto__: null\n\n, get [Symbol.toStringTag]() {return '«SourceLocation»'}\n, toString() {return `«${this.line}:${this.column}»`}\n, get column() {return this.pos - this.line_pos}\n\n, create(source, file) {\n    const root ={\n      line:0, pos:0, line_pos:0\n    , __proto__: SourceLocation};\n\n    if (null != file) {\n      root.file = file;}\n\n    Object.defineProperties(root,{\n      __root__:{value: root}\n    , source:{value: source} } );\n    return Object.freeze(root) }\n\n, nextLine() {\n    let {line, pos} = this;\n    line += 1;\n    return Object.freeze({\n      line, pos, line_pos: pos,\n      __proto__: this.__root__}) }\n\n, move(char_len) {\n    if ('string' === typeof char_len) {\n      char_len = char_len.length;}\n    else if ('number' === typeof char_len) {\n      char_len |= 0;}\n    else throw new TypeError('Expected move to be a string or number')\n\n    let {line, pos, line_pos} = this;\n    pos += char_len;\n    return Object.freeze({\n      line, pos, line_pos,\n      __proto__: this.__root__}) }\n\n, distance(other) {\n    const lines = this.line - other.line;\n    const chars = this.pos - other.pos;\n    return {lines, chars} }\n\n, slice(other) {\n    if (this.source !== other.source) {\n      throw new Error(`Locations from different sources`) }\n    return this.source.slice(this.pos, other.pos) }\n\n, syntaxError(message) {\n    const err = new SyntaxError(message);\n    err.src_loc = this;\n    return err} };\n\nvar createLoc = SourceLocation.create;\n\nconst rx_lines = /(\\r\\n|\\r|\\n)/ ;\nconst rx_indent = /^([ \\t]*)(.*)$/ ;\nconst rx_indent_order = /^[\\t]*[ ]*$/ ;\n\nfunction basic_offside_scanner(source, feedback) {\n  if (null == feedback) {\n    feedback ={\n      warn(msg, ...args) {console.warn(`[Offside Warning]:: ${msg}`, ...args);} }; }\n\n  const all_lines = [];\n  const q_raw_lines = source.split(rx_lines);\n\n  const offside_line_proto ={\n    __proto__: null\n  , get source() {\n      const {start, end} = this.loc;\n      return start.slice(end)} };\n\n  let loc_tip = createLoc(source, feedback.file);\n\n  while (0 !== q_raw_lines.length) {\n    const loc ={start: loc_tip = loc_tip.nextLine()};\n\n    const src_line = q_raw_lines.shift() || '';\n    loc.end = loc_tip = loc_tip.move(src_line);\n\n    const src_line_end = q_raw_lines.shift() || '';\n    loc_tip = loc_tip.move(src_line_end);\n\n\n    const match = rx_indent.exec(src_line);\n    const loc_indent = loc.start.move(match[1]);\n    const is_blank = 0 === match[2].length;\n\n    if (! rx_indent_order.test(match[1])) {\n      throw loc.start.syntaxError(`Mixed tab and space indent (${loc_indent})`, ) }\n\n    const raw ={\n      line: src_line\n    , line_end: src_line_end\n    , indent: match[1]\n    , content: match[2]};\n\n    let node;\n    if (is_blank) {\n      node ={\n        type: 'offside_blank_line', loc\n      , is_blank}; }\n\n    else {\n      const indent_node ={\n        type: 'offside_indent',\n        loc:{\n          start: loc.start\n        , end: loc_indent}\n      , len_indent: match[1].length\n      , indent: match[1]};\n\n      const conent_node ={\n        type: 'offside_content',\n        loc:{\n          start: loc_indent\n        , end: loc.end}\n      , len_indent: match[1].length\n      , indent: match[1]\n      , content: match[2]};\n\n      node ={\n        __proto__: offside_line_proto\n      , type: 'offside_line', loc\n      , indent: indent_node\n      , content: conent_node\n      , len_indent: match[1].length}; }\n\n    Object.defineProperties(node,{raw: {value: raw}});\n    all_lines.push(node); }\n\n  add_indent_info(all_lines);\n  return all_lines}\n\n\nfunction add_indent_info(all_lines) {\n  let len_dedent=0;\n  const len_stack = [0];\n  for (let i = all_lines.length-1 ; i>=0 ; i--) {\n    const ln = all_lines[i];\n    if (ln.is_blank) {continue}\n\n    ln.len_dedent = len_dedent;\n    const len_indent = ln.len_indent;\n\n    let len_inner;\n    while (len_stack[0] > len_indent) {\n      len_inner = len_stack.shift();}\n\n    if (len_stack[0] < len_indent) {\n      len_stack.unshift(len_indent); }\n\n    if (len_inner) {\n      ln.len_inner = len_inner;}\n\n    len_dedent = len_indent;} }\n\nfunction ensure_indent(ctx, scanner) {\n  const ln_first = scanner.ln_first;\n  if (undefined === ln_first) {return true}\n  const len_first_indent = ln_first.len_indent;\n\n  const d_dedent = ctx.ln.len_indent - len_first_indent;\n  if (d_dedent < 0) {\n    throw ctx.ln.indent.loc.end.syntaxError(\n      `Invalid indent level in ${scanner.description}. (${ctx.ln.indent.loc.end})  --  current indent: ${ctx.ln.len_indent}  start indent: ${len_first_indent} from (${ln_first.loc.start})`) }\n  else return true}\n\n\nfunction ensure_progress(loc0, loc1) {\n  if (loc0.pos == loc1.pos) {\n    throw new Error(`Scanner failed to make progress (${loc1})`) }\n\n  if (loc0.pos > loc1.pos) {\n    throw new Error(`Scanner went backward (${loc1} from ${loc0})`) } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass DispatchScanner {\n  constructor(disp_name) {\n    this.disp_name = disp_name || 'root';\n    this.by_kind = {};\n    this.by_op = {};}\n\n  startCompile() {\n    Object.defineProperties(this,{\n      rx_list:{value: (this.rx_list || []).slice()} } );\n    this.by_kind = Object.assign({}, this.by_kind);\n    this.by_op = Object.assign({}, this.by_op);\n    return this}\n\n  addScannerList(scannerList) {\n    for (const scanner of scannerList) {\n      if (scanner) {\n        this.addScanner(scanner);} }\n    return this}\n\n  addScanner(scanner) {\n    if (scanner.withDispatch) {\n      scanner = scanner.withDispatch(this);}\n\n    if (scanner.is_body) {\n      this.ds_body = scanner;}\n\n    this.by_op[scanner.op] = scanner;}\n\n  addRegExpScanner(scanner, kind, re_disp) {\n    if (kind) {\n      this.by_kind[kind] = scanner.op;\n      this.rx_list.push(new RegExp(re_disp, 'g')); }\n    return this}\n\n  finishCompile(ds_body) {\n    if (undefined === ds_body) {\n      ds_body = this.ds_body;}\n    return Object.defineProperties(this,{\n      ds_body:{value: ds_body, writable: true} } ) }\n\n\n  clone0() {\n    if (undefined !== this.level) {\n      throw new Error(`Invalid clone0`) }\n    return this.cloneWithScanner()}\n\n  cloneWithScanner(...scanners) {\n    return this.cloneWithScannerList(scanners)}\n  cloneWithScannerList(scanners) {\n    const self = Object.create(this);\n    self.level = 1 + 0|self.level;\n    self.description = self.description.replace(\n      /\\(\\d+\\)/, `(${self.level})`);\n\n    self.startCompile();\n    self.addScannerList(scanners);\n    self.finishCompile();\n    return self}\n\n\n  get_active_dispatch(ctx) {\n    return ctx[`dispatch_${this.disp_name}`]}\n  set_active_dispatch(ctx) {\n    ctx.dispatch = ctx[`dispatch_${this.disp_name}`] = this;}\n\n\n  newline(ctx, is_blank) {}\n\n  scan(ctx, idx0) {\n    const loc0 = ctx.loc_tip;\n    const res = this._scan(ctx, idx0);\n    ensure_progress(loc0, ctx.loc_tip);\n    return res}\n\n  _scan(ctx, idx0) {\n    this.set_active_dispatch(ctx);\n\n    if (undefined === this.ln_first) {\n      if (undefined === this.level) {\n        throw new Error('Scanner with level: undefined')}\n\n      this.ln_first = ctx.ln;}\n\n    ensure_indent(ctx, this);\n\n    const source = ctx.ln_source; // slice is done by setting lastIndex\n    let match=null, idx1 = Infinity;\n\n    for (const rx of this.rx_list) {\n      rx.lastIndex = idx0; // regexp powered source.slice()\n\n      const m = rx.exec(source);\n      if (null !== m && m.index < idx1) {\n        idx1 = m.index;\n        match = m;} }\n\n    if (null === match) {\n      return this.ds_body.scan(ctx, idx0)}\n\n    if (idx0 !== idx1) {\n      return this.ds_body.scan_fragment(\n        ctx, source.slice(idx0, idx1)) }\n\n    const kind = match.filter(Boolean)[1];\n    const op = this.by_kind[kind];\n    const op_scanner = this.by_op[op];\n    if (! op_scanner) {\n      throw new Error(`No scanner registered for « ${kind} »`) }\n\n    return op_scanner.scan(ctx, idx1)}\n\n  scan_fragment(ctx, content) {\n    throw new Error(`${this.description} does not support fragments`) } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass DispatchFirstlineScanner extends DispatchScanner {\n  clone0() {\n    const self = super.clone0();\n    self.ds_body = self.ds_body.clone0();\n    return self}\n  scan(ctx, idx0) {\n    ctx.scanner = this.ds_body;\n    return super.scan(ctx, idx0)} }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass EmbeddedDispatchScanner extends DispatchScanner {\n  constructor(options) {\n    super(options.disp_name);\n    Object.assign(this, options);\n    this._compileForInit();}\n\n  _compileForInit() {\n    this.startCompile();\n    this.addScannerList(this.scannerList);\n    this.finishCompile();} }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass BaseSourceScanner {\n  constructor(options) {\n    Object.assign(this, options);\n    this._compileForInit();}\n\n  _compileForInit() {}\n\n  withDispatch(ds) {return this}\n\n  emit_ast(ctx, content, ast_type) {\n    const start = ctx.loc_tip;\n    const end = ctx.loc_tip = start.move(content || 0);\n    const ast ={type: ast_type || this.op, loc: {start, end}, content};\n    this._ast_extend(ctx, ast);\n    ctx.parts.push(ast);\n    return ast}\n\n  _ast_extend(ctx, ast) {}\n\n  newline(ctx, is_blank) {}\n  scan_fragment(ctx, content) {\n    throw new Error(`Scanner (${this.description}) does not support fragments`) }\n  scan(ctx, idx0) {\n    throw new Error(`Scanner (${this.description}) does not support scans`) } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass SourceCodeScanner extends BaseSourceScanner {\n  get is_body() {return true}\n\n  scan_fragment(ctx, content) {\n    this.scan_content(ctx, content); }\n\n  scan(ctx, idx0) {\n    this.scan_content(ctx, ctx.ln_source.slice(idx0)); }\n\n  scan_content(ctx, content) {\n    if (content) {\n      this.emit_ast(ctx, content); } } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass NestedCodeScanner extends SourceCodeScanner {\n  constructor(options) {\n    super(options);\n    if (! this.char_pairs) {\n      throw new Error('Missing required char_pairs mapping') }\n\n    const chars = Object.keys(this.char_pairs).join('\\\\');\n    this.rx = new RegExp(`([${chars}])`);}\n\n  withOuter(options) {\n    const scanner = options.scanner;\n    if ('function' !== typeof scanner.scan) {\n      throw new Error(`Expected valid outer scanner`) }\n    delete options.scanner;\n\n    const self = Object.create(this,{\n      restore_scanner:{value: scanner} } );\n    Object.assign(self, options);\n    return self}\n\n  scan_content(ctx, nested_content) {\n    const {stack, char_pairs} = this;\n\n    let content = '';\n    for (const tok of nested_content.split(this.rx)) {\n      const p = 1 === tok.length ? char_pairs[tok] : undefined;\n\n      if (undefined === p) {\n        content += tok;\n        continue}\n\n      if (true === p) {\n        content += tok;\n        stack.push(tok);\n        continue}\n\n      const tip = stack.pop();\n      if (tip !== p) {\n        const loc = ctx.loc_tip.move(content);\n        throw loc.syntaxError(\n          `Mismatched nesting in ${this.description} (${loc})`) }\n\n      if (0 !== stack.length) {\n        content += tok;\n        continue}\n\n      if (content) {\n        this.emit_ast(ctx, content); }\n      this.emit_ast(ctx, tok, this.ast_end || 'nested_end');\n      ctx.scanner = this.restore_scanner;\n      return}\n\n    // all tokens with non-zero stack\n    if (content) {\n      this.emit_ast(ctx, content); } } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass RegExpScanner extends BaseSourceScanner {\n\n  _compileForInit() {\n    const {rx_open, rx_close} = this;\n    const rx_disp = new RegExp(\n      (rx_open ? rx_open.source : '') + rx_close.source);\n\n    const rx_resume = new RegExp(\n      '^' + rx_close.source);\n\n    Object.defineProperties(this,{\n      rx_disp:{value: rx_disp}\n    , rx_resume:{value: rx_resume} } ); }\n\n  withDispatch(ds) {\n    this.compileForDispatch(ds);\n    return this}\n\n  compileForDispatch(ds) {\n    if (undefined === this.kind) {return}\n\n    const match = this.rx_disp.exec(this.example);\n    if (null === match || this.kind !== match[1] || null == match[2]) {\n      throw new Error(`Invalid scanner regexp and/or example (${this.description})`) }\n\n    ds.addRegExpScanner(this, this.kind, this.rx_disp.source); }\n\n\n\n  newline(ctx, is_blank) {\n    if (! this.multiline && ! this.allow_blank_close) {\n      throw ctx.ln.loc.end.syntaxError(\n        `Newline in ${this.description} (${ctx.ln.loc.end})`) } }\n\n  _ast_extend(ctx, ast) {\n    const ln = this.ln_first || ctx.ln;\n    if (undefined !== ln.len_inner) {\n      ast.block_indent = ln.len_inner;}\n    return ast}\n\n  scan(ctx, idx0) {\n    const match = this.rx_disp.exec(ctx.ln_source.slice(idx0));\n    if (null === match) {\n      throw ctx.loc_tip.syntaxError(\n        `Invalid scan ${this.description}. (${ctx.loc_tip})`) }\n\n    const [content, open, close] = match;\n\n    const t_content = this.nestTrim(content, close, false);\n    if (t_content) {this.emit_ast(ctx, t_content);}\n    return this.post_scan(ctx, close)}\n\n  scan_continue(ctx, idx0) {\n    ensure_indent(ctx, this);\n\n    const match = this.rx_resume.exec(ctx.ln_source.slice(idx0));\n    if (null === match) {\n      throw ctx.loc_tip.syntaxError(\n        `Invalid scan continue ${this.description}. (${ctx.loc_tip})`) }\n\n    const [content, close] = match;\n\n    const t_content = this.nestTrim(content, close, true);\n    if (t_content) {this.emit_ast(ctx, t_content);}\n    return this.post_scan(ctx, close)}\n\n  nestTrim(content, close, isContinue) {\n    const nestingTrim = this.nestingTrim;\n    if (undefined !== nestingTrim) {\n      let trim = nestingTrim[close];\n      if (true === trim) {trim = close;}\n      if (trim) {return content.slice(0, - trim.length)} }\n\n    return content}\n\n  post_scan(ctx, close) {\n    if (! close) {\n      if (this.invert_close) {\n        // e.g. no '\\' continuations at end of line\n        return true}\n\n      if (! this.allow_blank_close) {\n        ctx.scanner = this.continueScanner(ctx);}\n      return}\n\n    else if (this.invert_close) {\n      // e.g. '\\' continuations at end of line\n      ctx.scanner = this.continueScanner(ctx);}\n\n    return this.nestMatch(close,\n      ctx, this.hostScanner || this) }\n\n  nestMatch(close, ctx, hostScanner) {\n    const nesting = this.nesting;\n    if (undefined !== nesting) {\n      return this.nestWith(\n        nesting[close],\n        ctx, hostScanner) }\n    return true }// pop ctx.scanner\n\n  nestWith(nested, ctx, hostScanner) {\n    if (true === nested || undefined === nested || null === nested) {\n      return true }// pop ctx.scanner\n\n    else if (hostScanner === nested || 'host' === nested) {\n      ctx.scanner = hostScanner.continueScanner(ctx);\n      return}\n\n    else if ('function' === typeof nested.nestedScanner) {\n      ctx.scanner = nested.nestedScanner(ctx);\n      return}\n\n    else if ('function' === typeof nested) {\n      return nested(ctx, hostScanner) }\n\n    return nested}\n\n\n  nestedScanner(ctx) {\n    return this._asNestedScanner(ctx, 'nest',{} ) }\n\n  continueScanner(ctx) {\n    return this._asNestedScanner(ctx, 'cont',{\n      op: this.op_continue || this.op\n    , continueScanner(ctx) {return this}\n    , scan(ctx, idx0) {\n        this.scan_continue(ctx, idx0);} } ) }\n\n  _asNestedScanner(ctx, desc, body) {\n    const restore_scanner = ctx.scanner;\n    const self ={\n      __proto__: this\n    , description: `${this.description} (${desc})`\n    , ln_first: ctx.ln_first || ctx.ln\n\n    , _pop_scanner(ctx) {\n        if (this.op_pop) {\n          this.emit_ast(ctx, '', this.op_pop); }\n        ctx.scanner = restore_scanner;}\n\n    , scan(ctx, idx0) {\n        if (true === super.scan(ctx, idx0)) {\n          this._pop_scanner(ctx);} }\n\n    , scan_continue(ctx, idx0) {\n        if (true === super.scan_continue(ctx, idx0)) {\n          this._pop_scanner(ctx);} } };\n\n    return Object.assign(self, body) } }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass MultiLineScanner extends RegExpScanner {\n  newline(ctx, is_blank) {}\n  get multiline() {return true} }\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass TaggedRegExpScanner extends RegExpScanner {\n  withTag(ctx, tag, hostScanner) {\n    const rx_replace = this.rx_replace || /tag/g;\n\n    const re_open = this.rx_open.source\n      .replace(rx_replace, tag);\n    const re_close = this.rx_close.source\n      .replace(rx_replace, tag);\n\n    const rx_open = new RegExp(re_open);\n    const rx_close = new RegExp(re_close);\n    const rx_disp = new RegExp(re_open + rx_close.source);\n    const rx_resume = new RegExp('^' + re_close);\n\n    const self ={__proto__: this, hostScanner,\n      rx_open, rx_close, rx_resume, rx_disp,\n      tag, ln_first: ctx.ln\n    , compileForDispatch(ds) {\n        // skip testing example for second pass of this object\n        ds.addRegExpScanner(this, this.kind, this.rx_disp.source); } };\n\n    self.tagScanner(ctx, tag, hostScanner);\n    return self}\n\n  tagScanner(ctx, tag, hostScanner) {} }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass DynamicScanner extends MultiLineScanner {\n  scan(ctx, idx0) {\n    const leader_match = this.rx_disp.exec(ctx.ln_source.slice(idx0));\n\n    const self = this.withLeaderTag(ctx, leader_match[2]);\n    return self._leader.scan(ctx, idx0)}\n\n  withLeaderTag(ctx, tag) {\n    const self ={\n      __proto__: this\n    , __root__: this.__root__ || this\n    , ln_first: ctx.ln};\n\n    self._trailer = this.trailer && this.trailer.withTag(ctx, tag, self);\n    self._leader = this.leader.withTag(ctx, tag, self);\n    return self} }\n\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nclass EmbeddedDynamicScanner extends DynamicScanner {\n  continueScanner(ctx) {\n    ensure_indent(ctx, this);\n    const ds_body = this.ds_body.cloneWithScanner(this._trailer);\n\n    // inherit ln_first\n    ds_body.ln_first = \n      ds_body.disp_name === ctx.dispatch.disp_name\n        ? ctx.dispatch.ln_first\n        : this.ln_first || ctx.ln;\n\n    return ds_body}\n\n  andDispatchWith(options) {\n    options.scannerList =[... options.scannerList, this];\n    const ds_body = new EmbeddedDispatchScanner(options);\n    this.ds_body = ds_body;\n    return ds_body} }\n\nfunction bind_context_scanner(context_scanners) {\n  if (! Object.isFrozen(context_scanners) || ! Array.isArray(context_scanners)) {\n    throw new TypeError(`Expected a frozen array of context scanners`) }\n\n  const cache = bind_context_scanner.cache || new WeakMap();\n  if (cache !== bind_context_scanner.cache) {\n    bind_context_scanner.cache = cache;}\n\n  let res = cache.get(context_scanners);\n  if (undefined === res) {\n    res = compile_context_scanner(context_scanners);\n    cache.set(context_scanners, res);}\n  return res}\n\n\nfunction compile_context_scanner(context_scanners) {\n  const ds_first = build_composite_scanner();\n  return context_scanner\n\n  function context_scanner(offside_lines) {\n    const ctx ={scanner: ds_first.clone0()};\n\n    for (const ln of offside_lines) {\n      if (ln.is_blank) {\n        delete ln.content;\n        ctx.scanner.newline(ctx, true);\n        continue}\n\n\n      ctx.parts = [];\n      ctx.ln = ln;\n\n      scan_source(ctx, ln.content);\n\n      if (0 === ctx.parts.length) {\n        throw new Error(`No parts generated by context scanner`) }\n\n      ln.content = ctx.parts;\n      ctx.scanner.newline(ctx, false);}\n\n    ctx.scanner.newline(ctx, true);\n    return offside_lines}\n\n\n  function scan_source(ctx, ln_content) {\n    const ln_source = ctx.ln_source = ln_content.content;\n    const loc_start = ctx.loc_tip = ctx.loc_start = ln_content.loc.start;\n    const pos0 = loc_start.pos;\n\n    while (true) {\n      const idx0 = ctx.loc_tip.pos - pos0;\n      if (idx0 >= ln_source.length) {\n        return }// done with this line\n\n      ctx.scanner.scan(ctx, idx0); } }\n\n\n  function build_composite_scanner() {\n    const ds_body = new DispatchScanner().startCompile();\n    ds_body.description = 'Dispatch scanner (0)';\n    const ds_first = new DispatchFirstlineScanner().startCompile();\n    ds_first.description = 'Firstline Dispatch scanner (0)';\n\n    for (const scanner of context_scanners) {\n      if (! scanner) {continue}\n\n      const ds = scanner.firstline ? ds_first : ds_body;\n      ds.addScanner(scanner);}\n\n    ds_body.finishCompile();\n    return ds_first.finishCompile(ds_body)} }\n\nfunction scan_offside_contexts(source, feedback, disp_name, context_scanners) {\n  // see scan_javascript and scan_clike for good context_scanners\n  const context_scanner = bind_context_scanner(disp_name);\n  return context_scanner(basic_offside_scanner(source, feedback)) }\n\nconst scanner_source =\n  new SourceCodeScanner({\n      description: 'Source Code Scanner'\n    , op: 'src'});\n\nconst scanner_nestedSrc =\n  new NestedCodeScanner({\n    op: 'src', description: 'Template parameter source'\n  , char_pairs:{\n      '{': true, '}': '{'\n    , '(': true, ')': '('\n    , '[': true, ']': '['} });\n\nconst scanner_hashbangDirective =\n  new RegExpScanner({\n      description: 'Hashbang directive'\n    , example: '#!/usr/bin/env node'\n    , op: 'hashbang', kind:'#!'\n    , rx_open: /^(#!)/, rx_close: /.*($)/,\n      firstline: true\n    , allow_blank_close: true});\n\nconst scanner_commentEOL =\n  new RegExpScanner({\n      description: 'Comment to end of line'\n    , example: '// comment'\n    , op: 'comment_eol', kind:'//'\n    , rx_open: /(\\/\\/)/, rx_close: /.*($)/,\n      allow_blank_close: true});\n\nconst scanner_commentMultiLine =\n  new MultiLineScanner({\n      description: 'Multi-line comment'\n    , example: '/* comment */'\n    , op: 'comment_multi', kind:'/*'\n    , rx_open: /(\\/\\*)/, rx_close: /.*?(\\*\\/|$)/,});\n\nconst scanner_strSingle =\n  new RegExpScanner({\n      description: 'Single quote string literal'\n    , example: \"'single quote'\"\n    , op: 'str1', kind:\"'\"\n    , rx_open: /(')/, rx_close: /(?:\\\\.|[^'])*('|$)/,});\n\nconst scanner_strDouble =\n  new RegExpScanner({\n      description: 'Double quote string literal'\n    , example: '\"double quote\"'\n    , op: 'str2', kind:'\"'\n    , rx_open: /(\")/, rx_close: /(?:\\\\.|[^\"])*(\"|$)/,});\n\nconst scanner_preprocessor =\n  new RegExpScanner({\n      description: 'Preprocessor directive'\n    , example: '# IF platform === \"web\"'\n    , op: 'preprocessor', kind:'#'\n    , rx_open: /^\\s*(#)/, rx_close: /.*?([\\\\]?)\\s*$/,\n      invert_close: true // preprocessor uses '\\' continuations\n    , allow_blank_close: true});\n\n\nconst clike_context_scanners = Object.freeze([\n  scanner_source\n, scanner_hashbangDirective\n, scanner_commentEOL\n, scanner_commentMultiLine\n, scanner_strSingle\n, scanner_strDouble\n, scanner_preprocessor]);\n\nconst scanner_regexp =\n  new RegExpScanner({\n      description: 'RegExp literal'\n    , example: '/regexp/'\n    , op: 'regexp'\n    , kind: '/'\n\n    , /*\n      rx_open: rx_or_parts @:\n        opts: @[]\n          /(\\/)(?![\\/\\*])/    // start of a potential regexp literal, but not a comment\n\n          @{}                 // ...complex regexp grammar...\n            pre: ''\n            opts: @[]\n              /\\\\./           // ...any escaped character...\n              /[^\\\\\\/\\[]/     // ...or any non-special character...\n\n              @{}             // ... or a bracket [] expression...\n                pre: '\\\\['        // started with a '[' character\n                opts: @[]\n                  /\\\\./           // ...with any escaped character\n                  /[^\\]]/         // ...or any non-escaped non-ending ']' character\n                post: '*\\\\]'      // ended with an ending ']' character\n\n            post: '+'         // one or more interior expressions\n\n          /(?=\\/)/            // (lookahead) end of a regexp literal\n      */\n\n      rx_open: new RegExp(\n        /(\\/)(?![\\/\\*])/ .source + // a RegExp start but not a comment\n        /(?:\\\\.|[^\\\\\\/\\[]|\\[(?:\\\\.|[^\\]])*\\])+/ .source)\n\n    , rx_close: /(\\/[a-z]*)\\s*(?=[;.,)\\]}]|$)/  // inspired by vim's syntax highlighting end\n\n    , });//multiline: false // spec https://tc39.es/ecma262/#sec-literals-regular-expression-literals\n\n\nconst scanner_strTemplate =\n  new MultiLineScanner({\n      description: 'Template quote string literal'\n    , example: '`template string`'\n    , op: 'str_template'\n    , kind: '`'\n    , rx_open: /(`)/\n    , rx_close: /(?:\\\\.|\\$(?!{)|[^\\$`\\\\])*(`|\\${|$)/\n    , nesting:{\n        '${': templateArgNesting} });\n\nfunction templateArgNesting(ctx, hostScanner) {\n  const src = scanner_nestedSrc.withOuter({\n    scanner: hostScanner.continueScanner(ctx)\n  , stack:['{' ]// from the template parameter opening\n  , ast_end: 'template_param_end'});\n\n  src.emit_ast(ctx, '', 'template_param');\n\n  ctx.scanner = ctx.dispatch_root.cloneWithScanner(src);}\n\n\n\nconst js_context_scanners = Object.freeze([\n  scanner_regexp\n, scanner_strTemplate\n, ... clike_context_scanners]);\n\nconst scanner_jsxContent =\n  new SourceCodeScanner({\n      description: 'JSX Content Scanner'\n    , op: 'jsx_content'});\n\nconst scanner_jsxContentExpr =\n  new RegExpScanner({\n      description: 'JSX Content Expression'\n    , example: '{ param }'\n    , op: 'jsx_content_expr'\n    , kind: '{'\n    , rx_open: /\\s*({)/,\n      rx_close: /()/,\n\n      nestTrim(content, close) {return ''}\n    , post_scan(ctx) {jsxArgNesting(ctx, null);} });\n\nconst scanner_jsxAttrNameValue =\n  new RegExpScanner({\n      description: 'JSX attribute name value'\n    , op: 'jsx_attr_name'\n    , rx_open: /\\s*([a-zA-Z0-9_:.\\-]+)/,\n      rx_close: /\\s*(=)\\s*/,});\n\nconst scanner_jsxAttrNameOnly =\n  new RegExpScanner({\n      description: 'JSX attribute name only'\n    , op: 'jsx_attr_name_only'\n    , rx_open: /\\s*([a-zA-Z0-9_:.\\-]+)/,\n      rx_close: /()/,\n\n      post_scan(ctx, close) {\n        return this.nestMatch(close,\n          ctx, this.hostScanner || this) } });\n\nconst scanner_jsxAttrSingle =\n  new RegExpScanner({\n      description: 'JSX Single quote attribute literal'\n    , multiline: true\n    , op: 'jsx_attr_str1'\n    , rx_open: /\\s*(')/,\n      rx_close: /(?:\\\\.|[^'])*(')\\s*/,});\n\nconst scanner_jsxAttrDouble =\n  new RegExpScanner({\n      description: 'JSX Double quote attribute literal'\n    , multiline: true\n    , op: 'jsx_attr_str2'\n    , rx_open: /\\s*(\")/,\n      rx_close: /(?:\\\\.|[^\"])*(\")\\s*/,});\n\nconst scanner_jsxTagClose =\n  new TaggedRegExpScanner({\n      description: 'JSX Close Tag'\n    , example: '</tag>'\n    , op: 'jsx_tag_close'\n    , kind: '</'\n    , multiline: true\n    , rx_open: /(<\\/)\\s*/\n    , rx_close: /([a-zA-Z0-9_:.\\-]+)\\s*>/\n\n    , tagScanner(ctx) {\n        this.restore_scanner = ctx.scanner;}\n\n    , post_scan(ctx, close) {\n        if (close !== this.tag) {\n          throw ctx.loc_tip.syntaxError(\n            `Mismatched JSX close tag \"</${close}>\", expected \"</${this.tag}>\". (${ctx.loc_tip})`) }\n\n        ctx.scanner = this.restore_scanner;} });\n\n\n\nconst scanner_jsxTag =\n  new TaggedRegExpScanner({\n      description: 'JSX Tag'\n    , multiline: true\n    , op: 'jsx_tag'\n    , op_continue: 'jsx_tag_part'\n\n    , rx_open: /(<)tag\\b\\s*/\n    , rx_close: /\\s*?($|\\/>|[{'\">]|[a-zA-Z0-9_:.\\-]+=?)/\n\n    , nesting:{\n        '>': 'host' // use hostScanner\n      , '/>': true }// pop ctx.scanner\n\n    , nestingEnd:{\n        '{': jsxArgNesting\n      , '=': scanner_jsxAttrNameValue\n      , \"'\": scanner_jsxAttrSingle\n      , '\"': scanner_jsxAttrDouble}\n\n    , nestTrim(content, close, isContinue) {\n        return this.nesting[close] ? content\n          : content.slice(0, - close.length)}\n\n    , nestMatch(close, ctx, hostScanner) {\n        let inner = this.nesting[close];\n        if (undefined === inner) {\n          inner = this.nestingEnd[close.slice(-1)]\n            || scanner_jsxAttrNameOnly;}\n\n        if (true !== inner && 'host' !== inner) {\n          // we're actually pushign two scanners onto the stack\n          // the first for this context, the second for the attribute\n          ctx.scanner = hostScanner = this.continueScanner(ctx);}\n\n        return this.nestWith(inner, ctx, hostScanner) } });\n\nfunction jsxArgNesting(ctx, hostScanner) {\n  const src = scanner_nestedSrc.withOuter({\n    scanner: null !== hostScanner\n      ? hostScanner.continueScanner(ctx)\n      : ctx.scanner\n  , stack:['{' ]// from the jsx parameter opening\n  , ast_end: 'jsx_param_end'});\n\n  src.emit_ast(ctx, '{', 'jsx_param');\n\n  ctx.scanner = ctx.dispatch_root.cloneWithScanner(src);}\n\n\n\n\nconst scanner_jsx =\n  new EmbeddedDynamicScanner({\n      description: 'Embedded JSX expression'\n    , example: '<section>content</section>'\n    , kind:'<'\n    , disp_name: 'jsx'\n    , op: 'jsx'\n\n    , // recognize by '<tag' followed by 'attr=' or '/>' or '>'\n      rx_open: /(<)([a-zA-Z0-9_:.\\-]+)(?=\\s*?(?:$|\\/>|>|\\s{|\\s[a-zA-Z0-9_:\\-]+=?))/\n    , rx_close: /.*$/\n\n    , leader: scanner_jsxTag\n    , trailer: scanner_jsxTagClose});\n\n\nconst scanner_embedded_jsx =\n  scanner_jsx.andDispatchWith({\n    description: 'JSX Dispatch Scanner (0)'\n  , disp_name: 'jsx'\n\n  , scannerList:[\n      scanner_jsxContent\n    , scanner_jsxContentExpr] });\n\nconst scanner_jsx_close_fragment =\n  new RegExpScanner({\n      description: 'Embedded JSX fragment close expression'\n    , example: '</>'\n    , op: 'jsx_frag_close'\n    , kind: '</'\n    , allow_blank_close: true\n\n    , rx_open: /(<\\/)\\s*/\n    , rx_close: /([a-zA-Z0-9_:.\\-]*)\\s*>/\n\n    , post_scan(ctx, close) {\n        if (close) {\n          throw ctx.loc_tip.syntaxError(\n            `Mismatched JSX fragment close tag \"</${close}>\", expected \"</$>\". (${ctx.loc_tip})`) }\n\n        ctx.scanner = this.restore_scanner;} });\n\nconst scanner_jsx_fragment =\n  new RegExpScanner({\n      description: 'Embedded JSX fragment expression'\n    , example: '<></>'\n    , op: 'jsx_frag'\n    , kind: '<>'\n\n    , rx_open: /(<>)/\n    , rx_close: /.*($|<\\/>)/\n\n    , nestTrim(content, close, isContinue) {\n        return '<>'}\n\n    , post_scan(ctx) {\n        const jsx_frag_close ={\n          __proto__: scanner_jsx_close_fragment\n        , restore_scanner: ctx.scanner};\n\n        const ds_body = \n          scanner_embedded_jsx.cloneWithScanner(\n            jsx_frag_close);\n\n        ds_body.description = 'Fragment' + ds_body.description;\n        const disp = ds_body.get_active_dispatch(ctx);\n        ds_body.ln_first = disp && disp.ln_first || ctx.ln;\n\n        ctx.scanner = ds_body;} });\n\n\n\n\nconst jsx_context_scanners = Object.freeze([\n  scanner_jsx_fragment\n, scanner_jsx\n, ... js_context_scanners]);\n\nfunction scan_javascript_with_jsx(source, feedback) {\n  return scan_offside_contexts(source, feedback, jsx_context_scanners)}\n\n//import {dbg_dump_ast} from './_ast_debug.jsy'\n\nfunction scan_jsy(source, feedback) {\n  const jsy_ast = scan_javascript_with_jsx(source, feedback);\n  //dbg_dump_ast('out.json5', jsy_ast)\n\n  inject_dedent(jsy_ast,['comment_eol']);\n  //dbg_dump_ast('out-post.json5', jsy_ast)\n\n  for (const ln of jsy_ast) {\n    if (ln.is_blank) {continue}\n\n    const parts = transform_jsy_ops(ln.content, ln);\n    ln.content = parts;\n\n    const idx_dedent = parts.findIndex(p => 'offside_dedent' === p.type);\n\n    for (let i_last=idx_dedent-1; i_last >= 0; i_last--) {\n      const last = parts[i_last];\n      if (undefined === last) {\n        continue}\n      else if (last.type.startsWith('jsy_op')) {\n        parts[idx_dedent].ends_with_jsy_op = true;\n        last.ending_jsy_op = true;}\n      else if ('src' !== last.type || last.content.trim()) {\n        break} } }\n\n  return jsy_ast}\n\n\n\nfunction transform_jsy_ops(parts, ln) {\n  const res = [];\n\n  for (let p, i=0; undefined !== (p = parts[i]) ; i++) {\n    if ('src' === p.type) {\n      transform_jsy_part(res, p, ln);}\n    else res.push(p);}\n\n\n  // allow keywords at the start and in code blocks after \"::\"\n  let kw_allowed = 'src' === res[0].type;\n  for (let idx=0 ; undefined !== res[idx] ; idx ++) {\n    if (kw_allowed) {\n      transform_jsy_keyword(res, idx, ln);\n      kw_allowed = false;}\n\n    else if ('jsy_op' === res[idx].type) {\n      kw_allowed = '::' === res[idx].op;} }\n\n  return res}\n\n\n\nfunction transform_jsy_keyword(res, idx, ln) {\n  const first = res[idx];\n\n  rx_keyword_ops.lastIndex = 0;\n  const kw_match = rx_keyword_ops.exec(first.content);\n  if (! kw_match) {return false}\n\n  const rest = kw_match.input.slice(rx_keyword_ops.lastIndex);\n  if ('(' === rest[0]) {\n    return res }// explicit keyword arguments\n\n  const kw_start = first.loc.start;\n  const kw_end = kw_start.move(kw_match[0]);\n  const kw = kw_match[0].split(' ').filter(Boolean).join(' ');\n\n  const after = rest ? null : res[1+idx];\n  const explicit = after && 'jsy_op' === after.type && '@' === after.op;\n\n  const kw_node ={\n    type: 'jsy_kw', kw, \n    loc:{start: kw_start, end: kw_end}\n  , len_indent: ln.len_indent\n  , explicit};\n\n  const post_node = as_src_ast(rest, kw_end, first.loc.end);\n\n  res.splice(idx, 1, kw_node, post_node);\n  return true}\n\n\nfunction transform_jsy_part(res, part, ln) {\n   {\n    rx_offside_ops.lastIndex = 0;\n\n    let loc_tip = part.loc.start;\n    while (true) {\n      let start = loc_tip, idx0 = rx_offside_ops.lastIndex;\n      const op_match = rx_offside_ops.exec(part.content);\n\n      if (! op_match) {\n        _tail(loc_tip, idx0);\n        return res}\n\n      if (idx0 < op_match.index) {\n        start = loc_tip = _inner(loc_tip, idx0, op_match.index);\n        idx0 = rx_offside_ops.lastIndex;}\n\n\n      const op = op_match[0].trim();\n      const end = loc_tip = loc_tip.move(op_match[0]);\n\n      const op_part ={\n        type: 'jsy_op', op\n      , loc:{start, end}\n      , len_indent: ln.len_indent\n      , content: op_match[0]};\n\n      const op_args = op_match.slice(1).filter(Boolean);\n      if (op_args.length) {\n        op_part.type = 'jsy_op_args';\n        op_part.op_args = op_args;\n        op_part.op = op_args.reduce(\n          (op, p) => op.replace(p, ''), op); }\n\n      res.push(op_part); } }\n\n  function _unknown_ops(content, loc_tip, idx0) {\n    rx_unknown_ops.lastIndex = idx0;\n    const op_unknown = rx_unknown_ops.exec(content);\n    if (op_unknown) {\n      const op = op_unknown[0].trim();\n      const start = loc_tip;\n      const end = loc_tip = loc_tip.move(op_unknown[0]);\n      res.push({\n        type: 'jsy_unknown', op\n      , loc:{start, end}\n      , len_indent: ln.len_indent\n      , content: op_unknown[0]}); } }\n\n  function _inner(loc_tip, idx0, idx_content) {\n    const pre = part.content.slice(idx0, idx_content);\n    _unknown_ops(pre, loc_tip, idx0);\n\n    const start = loc_tip;\n    const end = loc_tip.move(pre);\n    res.push(as_src_ast(pre, start, end));\n    return end}\n\n  function _tail(loc_tip, idx0) {\n    const rest = part.content.slice(idx0);\n    if (rest) {\n      _unknown_ops(rest, loc_tip, idx0);\n\n      const start = loc_tip;\n      const end = start.move(rest);\n      res.push(as_src_ast(rest, start, end)); } } }\n\nfunction as_src_ast(content, start, end) {\n  return {type: 'src', loc: {start, end}, content} }\n\nconst rx_all_space =  /^[ \\t]*$/ ;\n\nconst xform_proto = {\n  __proto__: null\n\n, process() {}// noop\n\n, update(arg) {\n    if ('function' === typeof arg) {\n      this.process = arg;}\n    else if ('boolean' === typeof arg) {\n      if (arg) {return this.dedent()}\n      this.process = xform_proto.process;}\n    else if ('object' === typeof arg) {\n      Object.assign(this, arg);\n      let process = this.process;\n      if ('function' !== typeof process && 'object' !== typeof process) {\n        return this.update(process)} }\n    else {\n      throw new TypeError(`Unsupported update type: ${typeof arg}`) }\n\n    return this}\n\n, dedent() {\n    let len_trim = this.ln.len_indent - this.ln.len_inner;\n    return this.update(src_parts => {\n      let indent = src_parts[0];\n      if (rx_all_space.test(indent)) {\n        src_parts[0] = indent.slice(0, len_trim);}\n      return src_parts} ) } };\n\n\nconst create_xform = (( ln, xform_cur ) =>({\n  __proto__: xform_proto\n, next: xform_cur\n, ln, depth: ln.len_inner}) );\n\n\nfunction basic_preprocessor(answerFor) {\n  if (null == answerFor) {\n    return p => p }// defines is null -- disable preprocessor\n\n  if ('object' === typeof answerFor) {\n    answerFor = shunting_yard(answerFor);}\n  else if ('function' !== typeof answerFor) {\n    throw new TypeError(`Expected a function or object for basic_preprocessor`) }\n\n\n  const directives ={\n    IF(p, arg, state) {\n      if (! arg) {throw syntaxError(p)}\n      return state.handled = !! answerFor(arg)}\n\n  , ELIF(p, arg, state) {\n      if (! arg || 'boolean' !== typeof state.handled) {\n        throw syntaxError(p)}\n      if (state.handled) {return false}\n      return state.handled = !! answerFor(arg)}\n\n  , ELSE(p, arg, state) {\n      if (arg || 'boolean' !== typeof state.handled) {\n        throw syntaxError(p)}\n      if (state.handled) {return false}\n      state.handled = null;\n      return true} };\n\n  const rx = /^#\\s*([A-Z]+\\b)(.*)$/;\n\n  const stack = [];\n  let allow = true, state = {};\n  return (p, add_xform) => {\n    let m = rx.exec(p.content);\n    let dispatch = m && directives[m[1]];\n    if (! dispatch) {throw syntaxError(p)}\n\n    if (! allow) {\n      state = null;\n      return false}\n\n    let ans = dispatch(p, m[2].trim(), state);\n    allow = !! ans;\n\n    stack.push(state); state = {};\n\n    add_xform({\n      process: allow\n    , done(ln) {\n        state = stack.pop();\n        allow = true;} }); }\n\n  function syntaxError(p) {\n    return p.loc.start.syntaxError(`Preprocessor Invalid: \"${p.content}\"`) } }\n\n\nfunction shunting_yard(defines) {\n   {\n    let _op_ = (order, op_fn) => (op_fn.order=order, op_fn);\n    let NOT = z => ! z.pop();\n    let AND = (z, a=z.pop(), b=z.pop()) => a && b;\n    let OR = (z, a=z.pop(), b=z.pop()) => a || b;\n\n    let ops ={\n      __proto__: null\n    , false: false, FALSE: false,\n      true: true, TRUE: true\n    , NOT, '!': _op_(0, NOT),\n      AND, '&&': _op_(10, AND),\n      OR, '||': _op_(20, OR),};\n\n    var lut_expr = key => ops[key] ?? defines[key];}\n\n  return function eval_shunting_yard(expr_src) {\n    // see https://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    let args=[], ops=[];\n\n    let expr = expr_src.split(/\\s+/).map(lut_expr);\n    for (let tip of expr) {\n      if ('function' !== typeof tip) {\n        args.push(tip);\n        continue}\n\n      // eval all lesser order operations\n      while (ops[0] && (0 | ops[0].order) <= (0 | tip.order)) {\n        args.push(ops.shift()(args)); }\n\n      // push this operator on the stack\n      ops.unshift(tip);}\n\n    // evaluate all operations\n    while (ops[0]) {\n      args.push(ops.shift()(args)); }\n\n    if (1 !== args.length) {\n      throw new SyntaxError(\n        `Invalid preprocessor expression: \"${expr_src}\"`) }\n\n    return args[0]} }\n\nconst rx_punct =  /[,.;:?]/;\nconst rx_binary_ops =  /\\&\\&|\\|\\|/;\n\nconst rx_disrupt_comma_tail = /* #__PURE__ */\n  _regexp_join('', [ rx_punct, /=>/, /[+-]/, rx_binary_ops ], '\\\\s*$');\n\nconst rx_disrupt_comma_head = /* #__PURE__ */\n  _regexp_join('^\\\\s*', [ rx_punct, rx_binary_ops ], '');\n\nconst rx_rescue_comma_head = /* #__PURE__ */\n  _regexp_join('^\\\\s*', [ /\\.\\.\\./ ], '');\n\nconst rx_last_bits =  /[()\\[\\]{}]|<\\/?\\w*>/ ;\nconst rx_dict_as_name =  /\\s+as\\s+\\w+/g;\n\nfunction checkOptionalComma(op, pre_body, post_body) {\n  let pre_end = pre_body.split(rx_last_bits).pop();\n  if (rx_disrupt_comma_tail.test(pre_end)) {\n    return false}\n\n  let post_start = post_body.split(rx_last_bits).shift();\n  if (rx_disrupt_comma_head.test(post_start)) {\n    if (! rx_rescue_comma_head.test(post_start)) {\n      return false} }\n\n  if (op.pre.includes('{')) {\n    pre_body = pre_body.replace(rx_dict_as_name, '');\n    post_body = post_body.replace(rx_dict_as_name, '');}\n\n  if (checkSyntax(`${op.pre} ${pre_body} , post_body ${op.post}`) ) {\n    return true}\n\n  if (checkSyntax(`${op.pre} pre_body , ${post_body} ${op.post}`) ) {\n    return true}\n\n  return false}\n\n\nconst fn_flavors = [\n  (function(){}).constructor\n, (function *(){}).constructor\n, (async function(){}).constructor\n, (async function *(){}).constructor];\n\nfunction checkSyntax(expr) {\n  for (let FuncKind of fn_flavors) {\n    try {\n      new FuncKind(`return ${expr}`);\n      return true}\n    catch (err) {} }\n\n  return false}\n\n\nfunction _regexp_join(pre, rx_options, post) {\n  rx_options = [... rx_options]\n    .flatMap(rx => rx ? [rx.source] : []);\n  return new RegExp(`${pre}(?:${rx_options.join('|')})${post}`)}\n\nconst rx_leading_space =  /^[ \\t]+/ ;\n\nconst root_head = /* #__PURE__ */ Object.freeze({__proto__: null});\n\nconst transpile_visitor = {\n  __proto__: null\n\n, *ast_iter(jsy_ast) {\n    this.start();\n\n    let ln, fin;\n    for (ln of jsy_ast) {\n      fin = this.ast_line(ln);\n      yield `${fin?.join('') ?? fin ?? ''}\\n`;}\n\n    fin = this.finish();\n    yield `${fin?.join('') ?? fin ?? ''}\\n`;}\n\n\n, ast_line(ln) {\n    if (ln.is_blank) {\n      return this.blank_line(ln)}\n\n    this.start_line(ln);\n    this.v$offside_indent(ln.indent);\n\n    let prev = ln.indent;\n    for (let part of ln.content) {\n      let fn_visit = `v$${part.type}`;\n      if (undefined === this[fn_visit]) {\n        throw new Error(`JSY transpile function \"${key}\" not found`) }\n\n      this[fn_visit]( part, ln, prev );\n      prev = part;}\n\n    return this.finish_line(ln)}\n\n, start() {\n    this.lineno = 0;\n    this.head = root_head;}\n\n, finish() {\n    this._xform_start_line(null);\n    if (root_head !== this.head) {\n      throw new Error('Excess stack at finish') } }\n\n, blank_line(ln) {\n    this.lineno ++;}\n\n, start_line(ln) {\n    this.lineno ++;\n    this.cur_ln = ln;\n    this._cur = [];\n\n    this._xform_start_line(ln);}\n\n, finish_line(ln) {\n    let line_src = this._cur;\n    if ('function' === typeof line_src.finish_commas) {\n      line_src = line_src.finish_commas(line_src);}\n\n    const comma_body = this.head.comma_body;\n    if (undefined !== comma_body) {\n      comma_body.push('\\n'); }\n\n    return this._xform_finish_line(line_src, ln)}\n\n, emit_raw(src) {\n    if (src) {this._cur.push(src);} }\n\n, emit(src, loc_start) {\n    if (loc_start && this.addSourceMapping) {\n      const column = this._cur.join('').length;\n      this.addSourceMapping({\n        generated:{line: this.lineno, column}\n      , original:{line: loc_start.line, column: loc_start.column} }); }\n\n    const comma_body = this.head.comma_body;\n    if (undefined !== comma_body) {\n      comma_body.push(src); }\n\n    this._cur.push(src); }\n\n, emit_indent(indent) {\n    const cur = this._cur;\n    if (0 !== cur.length) {\n      throw new Error(`Indent must be first element of cur list`) }\n\n    const comma_body = this.head.comma_body;\n    if (undefined === comma_body) {\n      cur.push(indent);\n      return}\n\n    comma_body.splice(0, comma_body.length,\n      comma_body.join('').trimLeft());\n\n    if (comma_body.len_inner != this.cur_ln.len_indent) {\n      cur.push(indent);\n      return}\n\n    cur.push(indent || ' ');\n\n    cur.finish_commas = cur => {\n      const pre = comma_body[0];\n      if (! pre) {return cur}\n\n      const post = comma_body.slice(1).join('');\n      const opt_comma = this.checkOptionalComma(comma_body.op, pre, post);\n      if (opt_comma) {\n        if (cur[0].length > 1) {\n          cur[0] = cur[0].replace(/\\s\\s$/, ', ');}\n        else cur[0] = ',';\n        comma_body.shift();}\n      return cur}; }\n\n, _checkOptionalComma: checkOptionalComma\n, checkOptionalComma\n\n, stack_push(op, p) {\n    if (op.foldTop && this.head.isFoldable) {\n      this.stack_pop();}\n\n    if (null === op.post) {\n      if (op.pre) {this.emit(op.pre);}\n      return}\n\n    const {len_indent, loc} = p;\n    const head ={__proto__: this.head\n    , op, len_indent, loc\n    , isFoldable: op.isFoldable\n    , nestBreak: op.nestBreak};\n\n    if (true === op.implicitCommas) {\n      const comma_body = head.comma_body = [];\n      comma_body.op = op;\n      comma_body.len_inner = this.cur_ln.len_inner;}\n    else head.comma_body = undefined;\n\n    if (op.in_nested_block) {\n      head.in_nested_block = true;\n      head.nested_block_indent = len_indent;}\n\n    head.tail = [this.head].concat(head.tail || []);\n\n    const src = head.op.pre;\n    if (src) {this.emit(src);}\n\n    this.head = head;}\n\n, stack_pop(c) {\n    const head = this.head;\n    const next = head.tail[0];\n    this.head = next;\n\n    if (head.op.implicitCommas && next.comma_body) {\n      // internal op was an expression; simplify for comma_body\n      next.comma_body.push(' expr ');}\n\n    const src = head.op.post;\n    if (src) {\n      this.emit(c ? ' '+src : src); } }\n\n, v$jsy_unknown(p) {\n    throw p.loc.start.syntaxError(\n      `JSY unknown operator \"${p.op}\"`) }\n\n, v$jsy_kw(p) {\n    const kw_op = p.explicit\n      ? extra_jsy_ops.kw_explicit\n      : extra_jsy_ops.kw_normal;\n\n    this.stack_push(kw_op.kwExpandOp(p), p); }\n\n, v$jsy_op(p) {\n    this._jsy_op(at_offside_map[p.op], p); }\n\n, v$jsy_op_args(p) {\n    this._jsy_op(at_offside_map[p.op], p); }\n\n, _jsy_op(jsy_op, p) {\n    if (! jsy_op) {\n      throw new Error(`JSY op handler not found for \"${p.op}\"`) }\n\n    if (jsy_op.warn) {jsy_op.warn(p);}\n\n    if (jsy_op.opResolve) {\n      jsy_op = validate_jsy_op_item(jsy_op.opResolve(p));\n      if (jsy_op.warn) {jsy_op.warn(p);} }\n\n    this._jsy_op_exec(jsy_op, p);}\n\n, _jsy_op_exec(jsy_op, p) {\n    if (jsy_op.is_kw_close) {\n      this._dedent_nested_block(p);}\n\n    this.stack_push(jsy_op, p); }\n\n\n, _dedent_nested_block(p) {\n    if (! this.head.in_nested_block) {return}\n\n    if (null != p) {\n      p.len_indent = this.head.nested_block_indent;}\n\n    let c = 0, done=false;\n    while (this.head && this.head.in_nested_block && ! done) {\n      done = this.head.op.in_nested_block;\n      this.stack_pop(c++); } }\n\n, _dedent_multi_ops() {\n    if (! this.head.loc) {return}\n\n    const line = this.cur_ln.loc.start.line;\n    const t = this.head.tail\n      .filter(t => t.loc && line === t.loc.start.line)\n      .pop();\n\n    if (undefined === t) {return}\n\n    let c = 0;\n    while (t !== this.head && !this.head.nestBreak) {\n      this.stack_pop(c++); } }\n\n, v$offside_dedent(p) {\n    if (! p.ends_with_jsy_op) {\n      this._dedent_multi_ops();}\n\n    let c = 0;\n    while (this.head.len_indent >= p.len_dedent) {\n      this.stack_pop(c++); } }\n\n\n, v$offside_indent(p) {\n    this.emit_indent(p.indent); }\n\n\n, v$template_param(p) {this._param(extra_jsy_ops.tmpl_param, p);}\n, v$template_param_end(p) {this._param_end(p);}\n\n, v$jsx_param(p) {this._param(extra_jsy_ops.jsx_param, p);}\n, v$jsx_param_end(p) {this._param_end(p);}\n\n, _param(op, p) {\n    this.stack_push(op, p);\n    this.emit_raw(p.content); }\n\n, _param_end(p) {\n    this._dedent_nested_block(p);\n    this.emit_raw(p.content);\n\n    const comma_body = this.head.comma_body;\n    if (undefined !== comma_body) {\n      // fixup comma_body with simplified template param\n      comma_body.push('null }'); } }\n\n\n, v$str_template(p, ln, p0) {\n    if (p0 === ln.indent && p.block_indent) {\n      const indent = this._cur.pop();\n      this._cur.push(indent.slice(p.block_indent)); }\n\n    this.emit(p.content, p.loc.start); }\n\n, v$src(p, ln, p0) {\n    let content = p.content;\n    if ({jsy_op:1, jsy_kw:1}[p0.type] && rx_leading_space.test(content)) {\n      content = content.replace(rx_leading_space, '');}\n\n    this.emit(content, p.loc.start); }\n\n\n, v$preprocessor(p, ln) {\n    const add_xform = arg =>\n      this.push_xform(ln, this.xform_tip).update(arg);\n\n    let ans = this.preprocess(p, add_xform);\n\n    if (p === ans) {\n      return this.emit(p.content, p.loc.start) }\n    else if ('string' === typeof ans) {\n      return this.emit(ans, p.loc.start) }\n    else if ('boolean' === typeof ans || 'function' === typeof ans) {\n      add_xform(ans);}\n\n    return this.emit_raw('')}\n\n, preprocess(p, add_xform) {return p}\n, push_xform(ln, xform_cur) {\n    return this.xform_next = create_xform(ln, xform_cur)}\n\n, _xform_start_line(ln) {\n    while (true) {\n      const xform = this.xform_tip;\n      if (undefined === xform) {return}\n      if (null !== ln && xform.depth <= ln.len_indent) {\n        return}\n\n      this.xform_tip = xform.next;\n      if (xform.done) {xform.done(ln);} } }\n\n, _xform_finish_line(line_src, ln) {\n    const xform_tip = this.xform_tip;\n\n    // switch to xform_next after finishing the current line\n    const xform_next = this.xform_next;\n    if (undefined !== xform_next) {\n      this.xform_next = undefined;\n      this.xform_tip = xform_next;}\n\n    if (undefined === xform_tip) {return line_src}\n\n    return xform_tip.process(line_src, ln)}\n\n\n, v$str: direct_src\n, v$str1: direct_src\n, v$str2: direct_src\n\n, v$regexp: direct_src\n\n, v$jsx_frag: direct_src\n, v$jsx_frag_close: direct_src\n, v$jsx_tag: direct_src\n, v$jsx_tag_part: direct_src\n, v$jsx_tag_close: direct_src\n, v$jsx_attr_name: direct_src\n, v$jsx_attr_name_only: direct_src\n, v$jsx_attr_str1: direct_src\n, v$jsx_attr_str2: direct_src\n, v$jsx_content: direct_src\n, v$jsx_content_expr: direct_src\n\n, v$hashbang: raw_src\n, v$comment_eol: raw_src\n, v$comment_multi: raw_src};\n\n\nfunction raw_src(p) {this.emit_raw(p.content);}\nfunction direct_src(p) {this.emit(p.content, p.loc.start);}\n\nfunction validate_jsy_op_item(jsy_op_item) {\n  let {pre, post} = jsy_op_item;\n\n  if (null !== pre && 'string' !== typeof pre) {\n    throw new Error('Invalid resolved jsy_op_item.pre result') }\n  if (null !== post && 'string' !== typeof post) {\n    throw new Error('Invalid resolved jsy_op_item.post result') }\n\n  return jsy_op_item}\n\nconst version = '0.10.0-0';\n\nfunction jsy_transpile(jsy_ast, feedback) {\n  return [... jsy_iter_transpile(jsy_ast, feedback)]\n    .join('') // join the stream that has embedded newlines\n    .replace(/\\s+$/, '\\n') }// trimming excess whitespace at end into single newline\n\nfunction * jsy_iter_transpile(jsy_ast, feedback) {\n  if (! feedback) {feedback = {};}\n\n  if ('string' === typeof jsy_ast) {\n    jsy_ast = scan_jsy(jsy_ast, feedback);}\n\n  let visitor ={\n    __proto__: transpile_visitor\n  , ... feedback.visitor};\n\n   {\n    if (feedback.checkOptionalComma) {\n      visitor.checkOptionalComma = feedback.checkOptionalComma;}\n\n    if (feedback.addSourceMapping) {\n      visitor.addSourceMapping = feedback.addSourceMapping;}\n\n    visitor.preprocess = feedback.preprocessor?.()\n      ?? basic_preprocessor(feedback.defines);}\n\n\n  yield * visitor.ast_iter(jsy_ast);\n\n  let srcmap = feedback.inlineSourceMap?.();\n  if (srcmap) {\n    yield sourcemap_comment(srcmap, '\\n');} }\n\n/* A tiny implementation of SourceMapGenerator usable in ES Module, CommonJS, and Browser friendly formats\n\nAPI:\n\n    {\n      addMapping({generated:{line, column}, original:{line, column}, source, name}) {},\n      setSourceContent(source, content) {},\n\n      toString() {},\n      toJSON() {},\n    }\n\nInspired and extracted from\n  require('source-map/lib/source-map-generator.js')\n\n*/\n\nfunction tiny_source_map_generator(src_map) {\n  src_map = {version: 3, ... (src_map || {}) };\n\n  const sources = [];\n  const names = [];\n  const mappings = [];\n  const contents = new Map();\n\n  return {\n    toJSON, toString: () => JSON.stringify(toJSON()),\n\n    setSourceContent(source, source_content) {\n      if (null != source_content)\n        contents.set(`${source}`, source_content);\n      else contents.delete(`${source}`);\n    },\n\n    addMapping({generated, original, source, name}) {\n      const m = {\n        gl: generated.line,\n        gc: generated.column,\n        ol: original != null && original.line,\n        oc: original != null && original.column, };\n\n      if (null != source) {\n        m.source = source = `${source}`;\n        if (! sources.includes(source))\n          sources.push(source);\n      }\n\n      if (null != name) {\n        m.name = name = `${name}`;\n        if (! names.includes(name))\n          names.push(name);\n      }\n\n      mappings.push(m);\n    },\n  }\n\n\n  function toJSON() {\n    const res_src_map = {\n      ... src_map,\n      sources: [... sources],\n      names: [... names]};\n\n    res_src_map.mappings =\n      _serializeMappings(\n        mappings, res_src_map);\n\n    if (0 !== contents.size)\n      res_src_map.sourcesContent =\n        res_src_map.sources.map(\n          key => contents.get(key) || null);\n\n    return res_src_map\n  }\n}\n\n\nfunction _serializeMappings(mappings, src_map) {\n  const vlq_gen_column = _vlq_state(0);\n  const vlq_orig_column = _vlq_state(0);\n  const vlq_orig_line = _vlq_state(0);\n  const vlq_name = _vlq_state(0);\n  const vlq_source = _vlq_state(0);\n\n  let line=1, result = '', prev_tip;\n  for (const tip of mappings) {\n    let sz = '';\n\n    if (tip.gl !== line) {\n      vlq_gen_column(0);\n      while (tip.gl !== line) {\n        sz += ';';\n        line++;\n      }\n    } else if (undefined !== prev_tip) {\n      if (0 === cmp_srcmappings(tip, prev_tip))\n        continue // if we didn't move forward, ignore it!\n\n      sz += ',';\n    }\n\n    sz += vlq_gen_column(tip.gc);\n\n    if (tip.source != null) {\n      sz += vlq_source(src_map.sources.indexOf(tip.source));\n      sz += vlq_orig_line(tip.ol - 1);\n      sz += vlq_orig_column(tip.oc);\n\n      if (tip.name != null) {\n        sz += vlq_name(src_map.names.indexOf(tip.name));\n      }\n    }\n\n    // success; move forward\n    result += sz;\n    prev_tip = tip;\n  }\n\n  return result\n}\n\nfunction _vlq_state(v0) {\n  const vlq = v => {\n    const res = _b64_vlq(v - v0);\n    vlq.value = v0 = v;\n    return res\n  };\n\n  vlq.value = v0;\n  return vlq\n}\n\n\nconst strcmp = (a, b) =>\n  a == b ? 0\n    : null == a ? 1\n    : null == b ? -1\n    : a > b ? 1 : -1;\n\nconst cmp_srcmappings = (a,b) => (\n     a.gl - b.gl\n  || a.gc - b.gc\n  || strcmp(a.source, b.source)\n  || a.ol - b.ol\n  || a.oc - b.oc\n  || strcmp(a.name, b.name) );\n\n\nconst _vlq_low = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef';\nconst _vlq_high = 'ghijklmnopqrstuvwxyz0123456789+/';\nfunction _b64_vlq(v) {\n  // move sign to LSB for VLQ encoding\n  v = v >= 0\n    ? (v << 1)\n    : 1 | ( -v << 1 );\n\n  let res = '';\n  while (true) {\n    // use lower 5 bits to generate a b64 symbol\n    let d = v & 0x1f;\n    v >>>= 5;\n    if (0 === v) {\n      res += _vlq_low[d];\n      return res\n    }\n\n    res += _vlq_high[d];\n  }\n}\n\nconst _jsy_srcmap_ctx = {\n  i: 1, ts: Date.now().toString(36)};\n\nfunction jsy_transpile_srcmap(jsy_src, ... args) {\n  let source_ref = null == args[0] || 'object' !== typeof args[0] ? args.shift() : null;\n  let opt = args.pop() || {};\n\n  if (null == source_ref) {\n    source_ref = `<jsy-${_jsy_srcmap_ctx.i++}-${_jsy_srcmap_ctx.ts}>.jsy`;}\n\n  const srcmap = !opt.sourcemap ? null\n    : opt.create_sourcemap\n      ? opt.create_sourcemap()\n      : tiny_source_map_generator();\n\n  if (null !== srcmap) {\n    srcmap.setSourceContent(source_ref, jsy_src); }\n\n  let code = jsy_transpile(jsy_src,{\n    addSourceMapping(arg) {\n      if (null == srcmap) {return}\n      if (source_ref) {\n        arg.source = source_ref;}\n      srcmap.addMapping(arg);}\n\n  , inlineSourceMap() {\n      if (srcmap && 'inline' == opt.sourcemap) {\n        return srcmap.toString()} }\n\n  , ... opt} );\n\n  return opt.as_rec ? {code, srcmap} : code}\n\nexport { jsy_transpile_srcmap as default, jsy_transpile, jsy_transpile_srcmap, version };\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","import { extname, win32, posix, isAbsolute, resolve } from 'path';\nimport { walk } from 'estree-walker';\nimport pm from 'picomatch';\n\nconst addExtension = function addExtension(filename, ext = '.js') {\n    let result = `${filename}`;\n    if (!extname(filename))\n        result += ext;\n    return result;\n};\n\nconst extractors = {\n    ArrayPattern(names, param) {\n        for (const element of param.elements) {\n            if (element)\n                extractors[element.type](names, element);\n        }\n    },\n    AssignmentPattern(names, param) {\n        extractors[param.left.type](names, param.left);\n    },\n    Identifier(names, param) {\n        names.push(param.name);\n    },\n    MemberExpression() { },\n    ObjectPattern(names, param) {\n        for (const prop of param.properties) {\n            // @ts-ignore Typescript reports that this is not a valid type\n            if (prop.type === 'RestElement') {\n                extractors.RestElement(names, prop);\n            }\n            else {\n                extractors[prop.value.type](names, prop.value);\n            }\n        }\n    },\n    RestElement(names, param) {\n        extractors[param.argument.type](names, param.argument);\n    }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n    const names = [];\n    extractors[param.type](names, param);\n    return names;\n};\n\nconst blockDeclarations = {\n    const: true,\n    let: true\n};\nclass Scope {\n    constructor(options = {}) {\n        this.parent = options.parent;\n        this.isBlockScope = !!options.block;\n        this.declarations = Object.create(null);\n        if (options.params) {\n            options.params.forEach((param) => {\n                extractAssignedNames(param).forEach((name) => {\n                    this.declarations[name] = true;\n                });\n            });\n        }\n    }\n    addDeclaration(node, isBlockDeclaration, isVar) {\n        if (!isBlockDeclaration && this.isBlockScope) {\n            // it's a `var` or function node, and this\n            // is a block scope, so we need to go up\n            this.parent.addDeclaration(node, isBlockDeclaration, isVar);\n        }\n        else if (node.id) {\n            extractAssignedNames(node.id).forEach((name) => {\n                this.declarations[name] = true;\n            });\n        }\n    }\n    contains(name) {\n        return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n    }\n}\nconst attachScopes = function attachScopes(ast, propertyName = 'scope') {\n    let scope = new Scope();\n    walk(ast, {\n        enter(n, parent) {\n            const node = n;\n            // function foo () {...}\n            // class Foo {...}\n            if (/(Function|Class)Declaration/.test(node.type)) {\n                scope.addDeclaration(node, false, false);\n            }\n            // var foo = 1\n            if (node.type === 'VariableDeclaration') {\n                const { kind } = node;\n                const isBlockDeclaration = blockDeclarations[kind];\n                node.declarations.forEach((declaration) => {\n                    scope.addDeclaration(declaration, isBlockDeclaration, true);\n                });\n            }\n            let newScope;\n            // create new function scope\n            if (/Function/.test(node.type)) {\n                const func = node;\n                newScope = new Scope({\n                    parent: scope,\n                    block: false,\n                    params: func.params\n                });\n                // named function expressions - the name is considered\n                // part of the function's scope\n                if (func.type === 'FunctionExpression' && func.id) {\n                    newScope.addDeclaration(func, false, false);\n                }\n            }\n            // create new for scope\n            if (/For(In|Of)?Statement/.test(node.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // create new block scope\n            if (node.type === 'BlockStatement' && !/Function/.test(parent.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // catch clause has its own block scope\n            if (node.type === 'CatchClause') {\n                newScope = new Scope({\n                    parent: scope,\n                    params: node.param ? [node.param] : [],\n                    block: true\n                });\n            }\n            if (newScope) {\n                Object.defineProperty(node, propertyName, {\n                    value: newScope,\n                    configurable: true\n                });\n                scope = newScope;\n            }\n        },\n        leave(n) {\n            const node = n;\n            if (node[propertyName])\n                scope = scope.parent;\n        }\n    });\n    return scope;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray(thing) {\n    if (isArray(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nconst normalizePath = function normalizePath(filename) {\n    return filename.split(win32.sep).join(posix.sep);\n};\n\nfunction getMatcherString(id, resolutionBase) {\n    if (resolutionBase === false || isAbsolute(id) || id.startsWith('*')) {\n        return normalizePath(id);\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = normalizePath(resolve(resolutionBase || ''))\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix.join(basePath, normalizePath(id));\n}\nconst createFilter = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray(include).map(getMatcher);\n    const excludeMatchers = ensureArray(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = normalizePath(id);\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords} ${builtins}`.split(' '));\nforbiddenIdentifiers.add('');\nconst makeLegalIdentifier = function makeLegalIdentifier(str) {\n    let identifier = str\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(/[^$_a-zA-Z0-9]/g, '_');\n    if (/\\d/.test(identifier[0]) || forbiddenIdentifiers.has(identifier)) {\n        identifier = `_${identifier}`;\n    }\n    return identifier || '_';\n};\n\nfunction stringify(obj) {\n    return (JSON.stringify(obj) || 'undefined').replace(/[\\u2028\\u2029]/g, (char) => `\\\\u${`000${char.charCodeAt(0).toString(16)}`.slice(-4)}`);\n}\nfunction serializeArray(arr, indent, baseIndent) {\n    let output = '[';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    for (let i = 0; i < arr.length; i++) {\n        const key = arr[i];\n        output += `${i > 0 ? ',' : ''}${separator}${serialize(key, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}]`;\n}\nfunction serializeObject(obj, indent, baseIndent) {\n    let output = '{';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    const entries = Object.entries(obj);\n    for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        const stringKey = makeLegalIdentifier(key) === key ? key : stringify(key);\n        output += `${i > 0 ? ',' : ''}${separator}${stringKey}:${indent ? ' ' : ''}${serialize(value, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}}`;\n}\nfunction serialize(obj, indent, baseIndent) {\n    if (typeof obj === 'object' && obj !== null) {\n        if (Array.isArray(obj))\n            return serializeArray(obj, indent, baseIndent);\n        if (obj instanceof Date)\n            return `new Date(${obj.getTime()})`;\n        if (obj instanceof RegExp)\n            return obj.toString();\n        return serializeObject(obj, indent, baseIndent);\n    }\n    if (typeof obj === 'number') {\n        if (obj === Infinity)\n            return 'Infinity';\n        if (obj === -Infinity)\n            return '-Infinity';\n        if (obj === 0)\n            return 1 / obj === Infinity ? '0' : '-0';\n        if (obj !== obj)\n            return 'NaN'; // eslint-disable-line no-self-compare\n    }\n    if (typeof obj === 'symbol') {\n        const key = Symbol.keyFor(obj);\n        // eslint-disable-next-line no-undefined\n        if (key !== undefined)\n            return `Symbol.for(${stringify(key)})`;\n    }\n    if (typeof obj === 'bigint')\n        return `${obj}n`;\n    return stringify(obj);\n}\nconst dataToEsm = function dataToEsm(data, options = {}) {\n    const t = options.compact ? '' : 'indent' in options ? options.indent : '\\t';\n    const _ = options.compact ? '' : ' ';\n    const n = options.compact ? '' : '\\n';\n    const declarationType = options.preferConst ? 'const' : 'var';\n    if (options.namedExports === false ||\n        typeof data !== 'object' ||\n        Array.isArray(data) ||\n        data instanceof Date ||\n        data instanceof RegExp ||\n        data === null) {\n        const code = serialize(data, options.compact ? null : t, '');\n        const magic = _ || (/^[{[\\-\\/]/.test(code) ? '' : ' '); // eslint-disable-line no-useless-escape\n        return `export default${magic}${code};`;\n    }\n    let namedExportCode = '';\n    const defaultExportRows = [];\n    for (const [key, value] of Object.entries(data)) {\n        if (key === makeLegalIdentifier(key)) {\n            if (options.objectShorthand)\n                defaultExportRows.push(key);\n            else\n                defaultExportRows.push(`${key}:${_}${key}`);\n            namedExportCode += `export ${declarationType} ${key}${_}=${_}${serialize(value, options.compact ? null : t, '')};${n}`;\n        }\n        else {\n            defaultExportRows.push(`${stringify(key)}:${_}${serialize(value, options.compact ? null : t, '')}`);\n        }\n    }\n    return `${namedExportCode}export default${_}{${n}${t}${defaultExportRows.join(`,${n}${t}`)}${n}};${n}`;\n};\n\n// TODO: remove this in next major\nvar index = {\n    addExtension,\n    attachScopes,\n    createFilter,\n    dataToEsm,\n    extractAssignedNames,\n    makeLegalIdentifier,\n    normalizePath\n};\n\nexport { addExtension, attachScopes, createFilter, dataToEsm, index as default, extractAssignedNames, makeLegalIdentifier, normalizePath };\n//# sourceMappingURL=index.js.map\n","//import { jsy_transpile_srcmap } from '@jsy-lang/jsy'\nimport { jsy_transpile_srcmap } from 'jsy-transpile'\nimport { createFilter } from '@rollup/pluginutils'\n\nexport function jsy_rollup_plugin(config) ::\n  config = @{}\n    include: ['**/*.jsy']\n    exclude: ['**/*.mjs', '**/*.cjs', 'node_modules/**']\n    ... config\n\n  const filter = createFilter @ config.include, config.exclude\n  const sourcemap = false !== config.sourcemap && false !== config.sourceMap\n  const { preprocessor, defines } = config\n  if ! preprocessor && config.preprocess ::\n    preprocessor = () => config.preprocess\n\n  return @{}\n    name: 'jsy'\n    transform(code, id) ::\n      if ! filter(id) :: return\n\n      try ::\n        let jsy = jsy_transpile_srcmap @ code, id, @{}\n          ... config.jsy, as_rec: true,\n          preprocessor, defines,\n          sourcemap, \n\n        return @{} code: jsy.code, map: jsy.srcmap.toJSON()\n\n      catch (err) ::\n        if undefined !== err.src_loc ::\n          this.error @ err, err.src_loc.pos\n        else throw err\n\nexport { jsy_rollup_plugin as default }\n"],"names":["path","POSIX_REGEX_SOURCE","constants","require$$1","utils","require$$0","scan","parse","require$$2","require$$3","require$$4"],"mappings":"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"}