
// From babel-plugin-offside-js
//     const tt_offside_disrupt_implicit_comma = new Set @#
//       tt.comma, tt.dot, tt.arrow, tt.colon, tt.semi, tt.question
//

const rx_disrupt_comma_tail = /[,.;:?]\s*$|=>\s*$/ ;
const rx_disrupt_comma_head = /^\s*[,.;:?]/ ;

const rx_last_bits = /[()\[\]{}]|<\/?\w*>/ ;
export default checkOptionalComma
export function checkOptionalComma(op, pre_body, post_body) ::
  const pre_end = pre_body.split(rx_last_bits).pop()
  const post_start = post_body.split(rx_last_bits).shift()

  if rx_disrupt_comma_tail.test(pre_end) :: return false
  if rx_disrupt_comma_head.test(post_start) :: return false

  const a1 = checkSyntax @ `${op.pre} ${pre_body} , post_body ${op.post}`
  const a2 = checkSyntax @ `${op.pre} pre_body, ${post_body} ${op.post}`

  return a1 || a2

function checkSyntax(expr) ::
  // use built-in Function from source to check syntax
  try ::
    new Function @ `return ${expr}`
    return true
  catch err ::
    return false


