import { readFile } from 'node:fs/promises'
import jsy_transpile_srcmap from './with_srcmap.jsy'


export async function jsy_transpile_main(filename, opt={}) ::
  try ::
    let [jsy_src, source_ref] =
      filename && '-' !== filename
        ? [await readFile(filename, 'utf-8'), filename]
        : [await _read_stdin(), '<stdin>']

    if ! jsy_src ::
      throw new Error('jsy-transpile expected a filename argument or stdin input')

    if process.env.JSY_NOSRCMAP ::
      opt.create_sourcemap = () => null

    let jsy = jsy_transpile_srcmap(jsy_src, source_ref, opt)
    process.stdout.write(jsy.code)
  catch (err) ::
    console.error(err)
    process.exit(1)
    return


async function _read_stdin(stdin=process.stdin) ::
  stdin.setEncoding('utf8')
  let contents = ''
  for await let chunk of stdin ::
    contents += chunk
  return contents


export @{}
  jsy_transpile_main as default,
  jsy_transpile_main as main,
