
export default inject_dedent
export function inject_dedent(offside_lines, trailing_types) ::
  if 'function' !== typeof trailing_types ::
    const s_trailing_types = new Set @
      trailing_types || ['comment_eol']
    trailing_types = k => s_trailing_types.has(k)

  let len_dedent=0
  const len_stack = [0]
  for let i = offside_lines.length-1 ; i>=0 ; i-- ::
    const ln = offside_lines[i]
    if ln.is_blank :: continue

    const len_indent = ln.len_indent

    let len_inner
    while len_stack[0] > len_indent ::
      len_inner = len_stack.shift()

    if len_stack[0] < len_indent ::
      len_stack.unshift @ len_indent

    const offside_dedent = @{}
      type: 'offside_dedent'
      len_dedent, len_indent

    if len_inner ::
      ln.len_inner = len_inner
      offside_dedent.len_inner = len_inner

    len_dedent = len_indent

    const last = ln.content.pop()
    if last.multiline || trailing_types(last.type) ::
      ln.content.push @ offside_dedent, last
    else ::
      ln.content.push @ last, offside_dedent

